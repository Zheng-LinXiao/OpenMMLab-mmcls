2023-02-07 23:08:53,235 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: win32
Python: 3.8.16 | packaged by conda-forge | (default, Feb  1 2023, 15:53:35) [MSC v.1929 64 bit (AMD64)]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3080 Ti
CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.3
NVCC: Cuda compilation tools, release 11.3, V11.3.58
MSVC: 用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.31.31105 版
GCC: n/a
PyTorch: 1.10.0
PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192829337
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=C:/cb/pytorch_1000000000000/work/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj -DUSE_PTHREADPOOL -openmp:experimental -IC:/cb/pytorch_1000000000000/work/mkl/include -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, 

TorchVision: 0.11.0
OpenCV: 4.7.0
MMCV: 1.7.1
MMCV Compiler: MSVC 192829924
MMCV CUDA Compiler: 11.3
MMClassification: 0.25.0+
------------------------------------------------------------

2023-02-07 23:08:53,236 - mmcls - INFO - Distributed training: False
2023-02-07 23:08:53,351 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNet',
        depth=18,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=1000,
        in_channels=512,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),
        topk=(1, 5)))
dataset_type = 'CustomDataset'
classes = ['daisy', 'dandelion', 'rose', 'sunflower', 'tulip']
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', size=224),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', size=(256, -1)),
    dict(type='CenterCrop', crop_size=224),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=128,
    workers_per_gpu=2,
    train=dict(
        type='CustomDataset',
        data_prefix='D:/code/mmclassification-master/data/train',
        ann_file='D:/code/mmclassification-master/data/train.txt',
        classes=['daisy', 'dandelion', 'rose', 'sunflower', 'tulip'],
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', size=224),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='CustomDataset',
        data_prefix='D:/code/mmclassification-master/data/val',
        ann_file='D:/code/mmclassification-master/data/val.txt',
        classes=['daisy', 'dandelion', 'rose', 'sunflower', 'tulip'],
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]))
evaluation = dict(interval=5, metric='accuracy')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='step', step=[30, 60, 90])
runner = dict(type='EpochBasedRunner', max_epochs=100)
checkpoint_config = dict(interval=1)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'D:/code/mmclassification-master/checkpoints/resnet-18.pth'
resume_from = None
workflow = [('train', 1)]
work_dir = 'work/resnest_18_lr_0.01'
gpu_ids = [0]

2023-02-07 23:08:53,352 - mmcls - INFO - Set random seed to 825118127, deterministic: False
2023-02-07 23:08:53,727 - mmcls - INFO - load checkpoint from local path: D:/code/mmclassification-master/checkpoints/resnet-18.pth
2023-02-07 23:08:54,685 - mmcls - INFO - Start running, host: zlx@DESKTOP-HS1JKFI, work_dir: D:\code\mmclassification-master\work\resnest_18_lr_0.01
2023-02-07 23:08:54,685 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-02-07 23:08:54,686 - mmcls - INFO - workflow: [('train', 1)], max: 100 epochs
2023-02-07 23:08:54,687 - mmcls - INFO - Checkpoints will be saved to D:\code\mmclassification-master\work\resnest_18_lr_0.01 by HardDiskBackend.
2023-02-07 23:09:09,481 - mmcls - INFO - Saving checkpoint at 1 epochs
2023-02-07 23:09:15,685 - mmcls - INFO - Saving checkpoint at 2 epochs
2023-02-07 23:09:21,868 - mmcls - INFO - Saving checkpoint at 3 epochs
2023-02-07 23:09:28,008 - mmcls - INFO - Saving checkpoint at 4 epochs
2023-02-07 23:09:34,212 - mmcls - INFO - Saving checkpoint at 5 epochs
2023-02-07 23:09:41,188 - mmcls - INFO - Epoch(val) [5][5]	accuracy_top-1: 89.2794, accuracy_top-5: 100.0000
2023-02-07 23:09:46,630 - mmcls - INFO - Saving checkpoint at 6 epochs
2023-02-07 23:09:52,797 - mmcls - INFO - Saving checkpoint at 7 epochs
2023-02-07 23:09:58,959 - mmcls - INFO - Saving checkpoint at 8 epochs
2023-02-07 23:10:05,109 - mmcls - INFO - Saving checkpoint at 9 epochs
2023-02-07 23:10:11,679 - mmcls - INFO - Saving checkpoint at 10 epochs
2023-02-07 23:10:13,086 - mmcls - INFO - Epoch(val) [10][5]	accuracy_top-1: 90.1582, accuracy_top-5: 100.0000
2023-02-07 23:10:18,543 - mmcls - INFO - Saving checkpoint at 11 epochs
2023-02-07 23:10:24,705 - mmcls - INFO - Saving checkpoint at 12 epochs
2023-02-07 23:10:30,875 - mmcls - INFO - Saving checkpoint at 13 epochs
2023-02-07 23:10:37,215 - mmcls - INFO - Saving checkpoint at 14 epochs
2023-02-07 23:10:43,382 - mmcls - INFO - Saving checkpoint at 15 epochs
2023-02-07 23:10:44,773 - mmcls - INFO - Epoch(val) [15][5]	accuracy_top-1: 89.8067, accuracy_top-5: 100.0000
2023-02-07 23:10:50,226 - mmcls - INFO - Saving checkpoint at 16 epochs
2023-02-07 23:10:56,451 - mmcls - INFO - Saving checkpoint at 17 epochs
2023-02-07 23:11:02,698 - mmcls - INFO - Saving checkpoint at 18 epochs
2023-02-07 23:11:09,231 - mmcls - INFO - Saving checkpoint at 19 epochs
2023-02-07 23:11:15,475 - mmcls - INFO - Saving checkpoint at 20 epochs
2023-02-07 23:11:16,874 - mmcls - INFO - Epoch(val) [20][5]	accuracy_top-1: 89.6309, accuracy_top-5: 100.0000
2023-02-07 23:11:22,328 - mmcls - INFO - Saving checkpoint at 21 epochs
2023-02-07 23:11:28,560 - mmcls - INFO - Saving checkpoint at 22 epochs
2023-02-07 23:11:34,776 - mmcls - INFO - Saving checkpoint at 23 epochs
2023-02-07 23:11:40,953 - mmcls - INFO - Saving checkpoint at 24 epochs
2023-02-07 23:11:47,138 - mmcls - INFO - Saving checkpoint at 25 epochs
2023-02-07 23:11:48,580 - mmcls - INFO - Epoch(val) [25][5]	accuracy_top-1: 89.8067, accuracy_top-5: 100.0000
2023-02-07 23:11:54,013 - mmcls - INFO - Saving checkpoint at 26 epochs
2023-02-07 23:12:00,237 - mmcls - INFO - Saving checkpoint at 27 epochs
2023-02-07 23:12:06,629 - mmcls - INFO - Saving checkpoint at 28 epochs
2023-02-07 23:12:12,775 - mmcls - INFO - Saving checkpoint at 29 epochs
2023-02-07 23:12:18,990 - mmcls - INFO - Saving checkpoint at 30 epochs
2023-02-07 23:12:20,424 - mmcls - INFO - Epoch(val) [30][5]	accuracy_top-1: 90.6854, accuracy_top-5: 100.0000
2023-02-07 23:12:25,933 - mmcls - INFO - Saving checkpoint at 31 epochs
2023-02-07 23:12:32,135 - mmcls - INFO - Saving checkpoint at 32 epochs
2023-02-07 23:12:38,369 - mmcls - INFO - Saving checkpoint at 33 epochs
2023-02-07 23:12:44,576 - mmcls - INFO - Saving checkpoint at 34 epochs
2023-02-07 23:12:50,960 - mmcls - INFO - Saving checkpoint at 35 epochs
2023-02-07 23:12:52,347 - mmcls - INFO - Epoch(val) [35][5]	accuracy_top-1: 90.5097, accuracy_top-5: 100.0000
2023-02-07 23:12:57,815 - mmcls - INFO - Saving checkpoint at 36 epochs
2023-02-07 23:13:04,159 - mmcls - INFO - Saving checkpoint at 37 epochs
2023-02-07 23:13:10,313 - mmcls - INFO - Saving checkpoint at 38 epochs
2023-02-07 23:13:16,617 - mmcls - INFO - Saving checkpoint at 39 epochs
2023-02-07 23:13:22,839 - mmcls - INFO - Saving checkpoint at 40 epochs
2023-02-07 23:13:24,279 - mmcls - INFO - Epoch(val) [40][5]	accuracy_top-1: 90.5097, accuracy_top-5: 100.0000
2023-02-07 23:13:29,728 - mmcls - INFO - Saving checkpoint at 41 epochs
2023-02-07 23:13:35,953 - mmcls - INFO - Saving checkpoint at 42 epochs
2023-02-07 23:13:42,170 - mmcls - INFO - Saving checkpoint at 43 epochs
2023-02-07 23:13:48,359 - mmcls - INFO - Saving checkpoint at 44 epochs
2023-02-07 23:13:54,519 - mmcls - INFO - Saving checkpoint at 45 epochs
2023-02-07 23:13:55,934 - mmcls - INFO - Epoch(val) [45][5]	accuracy_top-1: 90.6854, accuracy_top-5: 100.0000
2023-02-07 23:14:01,373 - mmcls - INFO - Saving checkpoint at 46 epochs
2023-02-07 23:14:07,764 - mmcls - INFO - Saving checkpoint at 47 epochs
2023-02-07 23:14:13,956 - mmcls - INFO - Saving checkpoint at 48 epochs
2023-02-07 23:14:20,094 - mmcls - INFO - Saving checkpoint at 49 epochs
2023-02-07 23:14:26,305 - mmcls - INFO - Saving checkpoint at 50 epochs
2023-02-07 23:14:27,684 - mmcls - INFO - Epoch(val) [50][5]	accuracy_top-1: 91.2126, accuracy_top-5: 100.0000
2023-02-07 23:14:33,136 - mmcls - INFO - Saving checkpoint at 51 epochs
2023-02-07 23:14:39,302 - mmcls - INFO - Saving checkpoint at 52 epochs
2023-02-07 23:14:45,496 - mmcls - INFO - Saving checkpoint at 53 epochs
2023-02-07 23:14:51,680 - mmcls - INFO - Saving checkpoint at 54 epochs
2023-02-07 23:14:57,736 - mmcls - INFO - Saving checkpoint at 55 epochs
2023-02-07 23:14:59,117 - mmcls - INFO - Epoch(val) [55][5]	accuracy_top-1: 91.0369, accuracy_top-5: 100.0000
2023-02-07 23:15:04,535 - mmcls - INFO - Saving checkpoint at 56 epochs
2023-02-07 23:15:10,676 - mmcls - INFO - Saving checkpoint at 57 epochs
2023-02-07 23:15:16,878 - mmcls - INFO - Saving checkpoint at 58 epochs
2023-02-07 23:15:23,519 - mmcls - INFO - Saving checkpoint at 59 epochs
2023-02-07 23:15:30,697 - mmcls - INFO - Saving checkpoint at 60 epochs
2023-02-07 23:15:34,452 - mmcls - INFO - Epoch(val) [60][5]	accuracy_top-1: 90.6854, accuracy_top-5: 100.0000
2023-02-07 23:15:39,864 - mmcls - INFO - Saving checkpoint at 61 epochs
2023-02-07 23:15:50,117 - mmcls - INFO - Saving checkpoint at 62 epochs
2023-02-07 23:15:59,140 - mmcls - INFO - Saving checkpoint at 63 epochs
2023-02-07 23:16:08,041 - mmcls - INFO - Saving checkpoint at 64 epochs
2023-02-07 23:16:16,983 - mmcls - INFO - Saving checkpoint at 65 epochs
2023-02-07 23:16:21,946 - mmcls - INFO - Epoch(val) [65][5]	accuracy_top-1: 90.8612, accuracy_top-5: 100.0000
2023-02-07 23:16:27,570 - mmcls - INFO - Saving checkpoint at 66 epochs
2023-02-07 23:16:33,828 - mmcls - INFO - Saving checkpoint at 67 epochs
2023-02-07 23:16:40,280 - mmcls - INFO - Saving checkpoint at 68 epochs
2023-02-07 23:16:46,566 - mmcls - INFO - Saving checkpoint at 69 epochs
2023-02-07 23:16:52,779 - mmcls - INFO - Saving checkpoint at 70 epochs
2023-02-07 23:16:54,234 - mmcls - INFO - Epoch(val) [70][5]	accuracy_top-1: 90.6854, accuracy_top-5: 100.0000
2023-02-07 23:16:59,694 - mmcls - INFO - Saving checkpoint at 71 epochs
2023-02-07 23:17:05,917 - mmcls - INFO - Saving checkpoint at 72 epochs
2023-02-07 23:17:12,087 - mmcls - INFO - Saving checkpoint at 73 epochs
2023-02-07 23:17:18,227 - mmcls - INFO - Saving checkpoint at 74 epochs
2023-02-07 23:17:24,517 - mmcls - INFO - Saving checkpoint at 75 epochs
2023-02-07 23:17:25,912 - mmcls - INFO - Epoch(val) [75][5]	accuracy_top-1: 90.6854, accuracy_top-5: 100.0000
2023-02-07 23:17:31,377 - mmcls - INFO - Saving checkpoint at 76 epochs
2023-02-07 23:17:37,899 - mmcls - INFO - Saving checkpoint at 77 epochs
2023-02-07 23:17:44,100 - mmcls - INFO - Saving checkpoint at 78 epochs
2023-02-07 23:17:50,283 - mmcls - INFO - Saving checkpoint at 79 epochs
2023-02-07 23:17:56,439 - mmcls - INFO - Saving checkpoint at 80 epochs
2023-02-07 23:17:57,839 - mmcls - INFO - Epoch(val) [80][5]	accuracy_top-1: 90.8612, accuracy_top-5: 100.0000
2023-02-07 23:18:03,354 - mmcls - INFO - Saving checkpoint at 81 epochs
2023-02-07 23:18:09,537 - mmcls - INFO - Saving checkpoint at 82 epochs
2023-02-07 23:18:16,052 - mmcls - INFO - Saving checkpoint at 83 epochs
2023-02-07 23:18:22,402 - mmcls - INFO - Saving checkpoint at 84 epochs
2023-02-07 23:18:29,283 - mmcls - INFO - Saving checkpoint at 85 epochs
2023-02-07 23:18:30,681 - mmcls - INFO - Epoch(val) [85][5]	accuracy_top-1: 91.2126, accuracy_top-5: 100.0000
2023-02-07 23:18:36,140 - mmcls - INFO - Saving checkpoint at 86 epochs
2023-02-07 23:18:43,143 - mmcls - INFO - Saving checkpoint at 87 epochs
2023-02-07 23:18:49,308 - mmcls - INFO - Saving checkpoint at 88 epochs
2023-02-07 23:18:55,403 - mmcls - INFO - Saving checkpoint at 89 epochs
2023-02-07 23:19:01,718 - mmcls - INFO - Saving checkpoint at 90 epochs
2023-02-07 23:19:03,097 - mmcls - INFO - Epoch(val) [90][5]	accuracy_top-1: 91.0369, accuracy_top-5: 100.0000
2023-02-07 23:19:08,555 - mmcls - INFO - Saving checkpoint at 91 epochs
2023-02-07 23:19:14,913 - mmcls - INFO - Saving checkpoint at 92 epochs
2023-02-07 23:19:21,057 - mmcls - INFO - Saving checkpoint at 93 epochs
2023-02-07 23:19:27,218 - mmcls - INFO - Saving checkpoint at 94 epochs
2023-02-07 23:19:33,436 - mmcls - INFO - Saving checkpoint at 95 epochs
2023-02-07 23:19:34,873 - mmcls - INFO - Epoch(val) [95][5]	accuracy_top-1: 90.8612, accuracy_top-5: 100.0000
2023-02-07 23:19:40,328 - mmcls - INFO - Saving checkpoint at 96 epochs
2023-02-07 23:19:46,870 - mmcls - INFO - Saving checkpoint at 97 epochs
2023-02-07 23:19:53,113 - mmcls - INFO - Saving checkpoint at 98 epochs
2023-02-07 23:19:59,361 - mmcls - INFO - Saving checkpoint at 99 epochs
2023-02-07 23:20:05,566 - mmcls - INFO - Saving checkpoint at 100 epochs
2023-02-07 23:20:06,953 - mmcls - INFO - Epoch(val) [100][5]	accuracy_top-1: 91.0369, accuracy_top-5: 100.0000
